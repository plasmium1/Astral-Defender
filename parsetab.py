
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftDIVIDETIMESleftNUMBERnonassocCUBEleftRPARENrightLPARENCUBE DIVIDE LPAREN MINUS NUMBER PLUS RPAREN TIMES\n    expression  : LPAREN expression RPAREN\n                | expression CUBE expression\n                | CUBE expression\n                | expression TIMES expression\n                | expression DIVIDE expression\n                | expression PLUS expression\n                | expression MINUS expression\n                | NUMBER\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,5,6,7,8,9,],[2,2,2,2,2,2,2,2,]),'CUBE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[3,5,3,3,-8,3,3,3,3,3,5,None,None,5,5,5,5,-1,]),'NUMBER':([0,2,3,5,6,7,8,9,],[4,4,4,4,4,4,4,4,]),'$end':([1,4,11,12,13,14,15,16,17,],[0,-8,-3,-2,-4,-5,-6,-7,-1,]),'TIMES':([1,4,10,11,12,13,14,15,16,17,],[6,-8,6,-3,-2,-4,-5,6,6,-1,]),'DIVIDE':([1,4,10,11,12,13,14,15,16,17,],[7,-8,7,-3,-2,-4,-5,7,7,-1,]),'PLUS':([1,4,10,11,12,13,14,15,16,17,],[8,-8,8,-3,-2,-4,-5,-6,-7,-1,]),'MINUS':([1,4,10,11,12,13,14,15,16,17,],[9,-8,9,-3,-2,-4,-5,-6,-7,-1,]),'RPAREN':([4,10,11,12,13,14,15,16,17,],[-8,17,-3,-2,-4,-5,-6,-7,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,5,6,7,8,9,],[1,10,11,12,13,14,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','main.py',46),
  ('expression -> expression CUBE expression','expression',3,'p_expression','main.py',47),
  ('expression -> CUBE expression','expression',2,'p_expression','main.py',48),
  ('expression -> expression TIMES expression','expression',3,'p_expression','main.py',49),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','main.py',50),
  ('expression -> expression PLUS expression','expression',3,'p_expression','main.py',51),
  ('expression -> expression MINUS expression','expression',3,'p_expression','main.py',52),
  ('expression -> NUMBER','expression',1,'p_expression','main.py',53),
]
